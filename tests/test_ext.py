import numpy as np
from pyconcord import axpy, mult, concord

x = np.array([[-1.5855721 ,  1.14879079, -0.1819169 , -0.19171889,  0.32595875,
         0.26037665, -1.24425307, -1.33985745, -0.62722648],
       [-1.95598675,  0.10469257,  1.18287004,  1.92693462,  0.32664972,
        -0.08654274, -0.76971422, -1.42476552,  0.50544001],
       [-0.2323751 , -0.66299795,  0.54659437,  1.17717952,  0.79950288,
         1.00903813,  1.0281708 ,  0.16661679, -2.25312999],
       [ 0.70627005, -0.37724334, -1.22841542,  0.26556894, -0.12183951,
        -0.02003569,  1.15386417, -0.46604829,  1.30467934],
       [ 0.20769278, -0.29964189, -2.35120491, -0.99548368, -0.06951809,
        -3.24049495, -0.13322222,  0.67947944,  0.08948608],
       [ 0.00991858, -0.63925869, -1.19744497, -1.02059796, -0.16656236,
         0.49238229, -1.26978954,  0.31681105,  1.23323424],
       [ 0.78364744,  1.57695728,  0.69686384,  0.21351693, -0.77546277,
        -0.2686248 ,  0.47940188,  0.32932016,  1.34917673],
       [-0.00740421,  0.50880864, -0.47323899, -0.13723516, -2.96208376,
         0.49656873,  0.91165842, -0.00408109,  1.30511265],
       [ 0.29851288,  0.78319094,  0.99135074,  1.59747387,  0.0698108 ,
        -1.50264965,  0.87323646,  0.69402005, -0.59654182],
       [ 1.20748934, -1.60105912,  1.70333359,  0.64342543, -0.04006735,
         1.5108505 ,  0.21815119,  1.52197328, -0.30254259],
       [-2.05109549, -1.1443195 ,  0.96840419,  1.50106034, -1.36826755,
        -1.59899801, -1.95005601, -1.07434668, -0.09682783],
       [ 2.73007008,  0.66126598,  0.39897688, -0.38862399, -1.10368216,
        -1.52686177, -1.02037037,  0.30201667, -0.05886098],
       [-0.09213551,  0.30289185, -0.27520564, -0.3229213 , -0.50566111,
        -1.36793332,  0.81627745,  1.46412338,  0.59862447]])



def test_concord():
	omega = concord(x, 0.3)
	cov = np.round(omega, 2)
	assert cov[0, 1] == cov[1, 0]


def test_axpy():
    x = np.array([1.0, 2.0, 3.0])
    y = np.array([3.0, 3.0, 3.0])
    z = axpy(3.0, x, y)
    np.testing.assert_array_almost_equal(z, np.array([6.0, 9.0, 12.0]))
    x = np.array([1.0, 2.0, 3.0, 4.0])
    y = np.array([3.0, 3.0, 3.0, 3.0])
    z = axpy(3.0, x, y)
    np.testing.assert_array_almost_equal(z, np.array([6.0, 9.0, 12.0, 15.0]))


def test_mult():
    x = np.array([1.0, 2.0, 3.0])
    mult(3.0, x)
    np.testing.assert_array_almost_equal(x, np.array([3.0, 6.0, 9.0]))